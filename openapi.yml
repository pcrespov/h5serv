openapi: 3.0.0
info:
  title: "h5serv RESTful API"
  version: "1.0.0"
  description: "RESTful API for h5serv"
paths:
  /:
    parameters:
      - $ref: '#/components/parameters/domainQuery'
      - $ref: '#/components/parameters/domainHeader'
    get:
      operationId: getDomain
      description: "Retrieves information about the requested domain"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Domain'
                  - $ref: '#/components/schemas/RelatedResources'
        '400':
          description: "The request was not structured correctly (e.g. a required key was missing)."
    put:
      operationId: newDomain
      description: "Creates a new domain. Initially the only domain is the root group."
      responses:
        '200':
          description: "gets new domain"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '409':
          description: "Domain already exists"
    delete:
      operationId: deleteDomain
      description: "Deletes domain defined in query/header"
      responses:
        '200':
          description: "domain deleted"

  /groups:
    get:
      operationId: getGroups
      description: "Returns UUIDs for all the groups in a domain (other than the root group)."
      parameters:
        - $ref: '#/components/parameters/domainQuery'
        - $ref: '#/components/parameters/domainHeader'
        - in: query
          name: Limit
          description: "If provided, a positive integer value specifying the maximum number of UUID’s to return"
          schema:
            type: integer
            minimum: 0
        - in: query
          name: Marker
          description: "If provided, a string value indicating that only UUID’s that occur after the marker value will be returned."
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      groups:
                        type: array
                        items: 
                          type: string
                          format: uuid
                  - $ref: '#/components/schemas/RelatedResources'

  /groups/{group_id}:
    parameters:
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/domainQuery'
      - $ref: '#/components/parameters/domainHeader'

    delete:
      operationId: deleteGroup
      description: ""
      responses:
        '200':
          description: deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedResources'
    get:
      operationId: getGroup
      description: "Returns information about the group with the UUID given in the URI"
      parameters:
        - in: query
          name: include_links
          description: "If this request parameter is provided, the links of the group are included in the response."
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Group'
                  - $ref: '#/components/schemas/TimeStamps'
                  - $ref: '#/components/schemas/RelatedResources'
    post:
      operationId: newGroup
      description: |
        Creates a new Group.
        *Note*: By default he new Group will not be linked from any other group in the domain. A link element can be included in the request body to have an existing group link to the new group. 
        Alternatively, use the PUT link operation to link the new group.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The UUID of the group the new group should be linked to. If the UUID is not valid, the request will fail and a new group will not be created."
                      format: uuid
                    name:
                      type: string
                      description: "The name of the new link."
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Group'
                  - $ref: '#/components/schemas/TimeStamps'
                  - $ref: '#/components/schemas/RelatedResources'


  /groups/{group_id}/links/{link_name}:
    parameters:
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/linkName'
      - $ref: '#/components/parameters/domainQuery'
      - $ref: '#/components/parameters/domainHeader'

    get:
      operationId: getLink
      description: "Returns information about a Link."
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Link'
                  - $ref: '#/components/schemas/TimeStamps'
                  - $ref: '#/components/schemas/RelatedResources'
    delete:
      operationId: deleteLink
      description: |
        The implementation of the DELETE operation deletes the link named in the URI.
        Groups, datatypes, and datasets that are referenced by the link will not be deleted. To delete groups, datatypes or datasets, 
        use the appropriate DELETE operation for those objects.
      responses:
        '200':
          description: "deleted and returns link in domain deleted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedResources'
        '403':
          description: "forbidden to delete root group"
    put:
      operationId: newLink
      description: |
        Creates a new link in a given group.
        Either hard, soft, or external links can be created based on the request elements. 
        *Note*: any existing link with the same name will be replaced with the new link.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: "The UUID of the group the new group should be linked to. If the UUID is not valid, the request will fail and a new group will not be created. If this key is present, the h5path and h5domain keys will be ignored"
                  type: string
                  format: uuid
                h5path:
                  description: "A string describing a path to an external resource. If this key is present an soft or external link will be created."
                  type: string
                h5domain:
                  description: "A string giving the external domain where the resource is present. If this key is present, the h5path key must be provided as well."
                  type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedResources'

components:
  schemas:
    RelatedResources:
      type: object
      properties:
        hrefs:
          description: "List to related resources"
          # https://h5serv.readthedocs.io/en/latest/Hypermedia.html
          type: array
          items:
            type: object
            properties:
              rel:
                description: type of relation
                type: string
                enum: [attributes ,data ,database ,groupbase ,home ,owner ,root ,self, typebase]
              href:
                description: link
                type: string

    Domain:
      type: object
      properties:
        root:
          type: string
          description: "The UUID of the root group of this domain"
        created:
          type: string
          description: "A timestamp giving the time the domain was created in UTC (ISO-8601 format)"
        lastModified:
          type: string
          description: "A timestamp giving the most recent time that any content in the domain has been modified in UTC (ISO-8601 format)."
    
    Group:
      type: object
      properties:
        id:
          description: "UUID of requested group"
          type: string
          format: uuid
        attributeCount:
          description: "The number of attributes in the group"
          type: integer
          minimum: 0
        linkCount:
          description: "Number of links in the group"
          type: integer
          minimum: 0

    TimeStamps:
      type: object
      properties:
        created:
          description: "A timestamp giving the time the group was created in UTC (ISO-8601 format)."
          type: string
        lastModified:
          description: "A timestamp giving the most recent time the group has been modified (i.e. attributes or links updated) in UTC (ISO-8601 format)."
          type: string

    Link:
      type: object
      properties:
        link:
          type: object
          properties:
            class:
              description: "type of link"
              type: string
              enum: ["H5L_TYPE_HARD", "H5L_TYPE_SOFT", "H5L_TYPE_EXTERNAL", "H5L_TYPE_UDLINK"]
            title:
              description: name of the link
              type: string
            href:
              description: "url to this link"
              type: string
              format: url
            id:
              description: "For hard links, the uuid of the object the link points to. For symbolic links this element is not present"
              type: string
              format: uuid
            collection:
              description: "For hard links, the domain collection for which the object the link points to is a member of"
              type: string
              enum: ["groups", "datasets", "datetypes"]
            target:
              description: "info on this link TODO: got in example, not found in doc http://DOMAIN/groups/{id}????"
              type: string
              format: uri
            h5path:
              description: "For soft or external links, path to the resouce"
              type: string
            h5domain:
              description: "For external links, the path of the external domain containing the object that is linked. Note: The domain may or may not exist. Use GET / with the domain to verify."
              type: string

  parameters:
    domainHeader:
      in: query
      description: "specifies domain if has DNS server"
      name: host
      schema:
        type: string
        #TODO: format tall.public.data.hdfgroup.org
    domainQuery:
      in: query
      description: "specifies domain if DNS server is not setup"
      name: host
      schema:
        type: string
        #TODO: format ?host=tall.public.data.hdfgroup.org
    groupId:
      in: path
      name: group_id
      description: "UUID of the group"
      required: true
      schema:
        type: string
        format: uuid
    linkName:
      in: path
      name: link_name
      description: "URL_encoded name of the link"
      required: true
      schema:
        type: string
        format: url

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

# https://data.hdfgroup.org:7258/?host=tall.test.data.hdfgroup.org
# https://h5serv.readthedocs.io/en/latest/CommonErrorResponses.html

# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/pcrespov/h5servRestApi/1.0

security:
  - BasicAuth: []